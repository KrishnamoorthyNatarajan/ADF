{
	"name": "ETLdataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureDimCustomerDS",
						"type": "DatasetReference"
					},
					"name": "AzureDimCustomerSource"
				},
				{
					"dataset": {
						"referenceName": "AzureCustomerDS",
						"type": "DatasetReference"
					},
					"name": "AzureCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureDimCustomerDS",
						"type": "DatasetReference"
					},
					"name": "sink"
				}
			],
			"transformations": [
				{
					"name": "CreateHash"
				},
				{
					"name": "Exists"
				},
				{
					"name": "LookupDates"
				},
				{
					"name": "SetAttributes"
				},
				{
					"name": "AlterRow"
				}
			],
			"script": "source(output(\n\t\tCustomerID as integer,\n\t\tNameStyle as boolean,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tInsertedDate as timestamp,\n\t\tUpdatedDate as timestamp,\n\t\tHashKey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AzureDimCustomerSource\nsource(output(\n\t\tCustomerID as integer,\n\t\tNameStyle as boolean,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AzureCustomer\nAzureCustomer derive(HashKey = sha1(FirstName+LastName+CompanyName)) ~> CreateHash\nCreateHash, AzureDimCustomerSource exists(CreateHash@HashKey == AzureDimCustomerSource@HashKey,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists\nExists, AzureDimCustomerSource lookup(AzureCustomer@CustomerID == AzureDimCustomerSource@CustomerID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDates\nLookupDates derive(InsertedDate = iif(isNull(InsertedDate), currentTimestamp(), InsertedDate),\n\t\tUpdatedDate = currentTimestamp()) ~> SetAttributes\nSetAttributes alterRow(upsertIf(true())) ~> AlterRow\nAlterRow sink(input(\n\t\tCustomerID as integer,\n\t\tNameStyle as boolean,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tInsertedDate as timestamp,\n\t\tUpdatedDate as timestamp,\n\t\tHashKey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['CustomerID'],\n\tformat: 'table',\n\tpreSQLs:['SET IDENTITY_INSERT dbo.dimcustomer ON'],\n\tmapColumn(\n\t\tCustomerID = {AzureCustomer@CustomerID},\n\t\tNameStyle = {AzureCustomer@NameStyle},\n\t\tTitle = {AzureCustomer@Title},\n\t\tFirstName = {AzureCustomer@FirstName},\n\t\tMiddleName = {AzureCustomer@MiddleName},\n\t\tLastName = {AzureCustomer@LastName},\n\t\tSuffix = {AzureCustomer@Suffix},\n\t\tCompanyName = {AzureCustomer@CompanyName},\n\t\tSalesPerson = {AzureCustomer@SalesPerson},\n\t\tEmailAddress = {AzureCustomer@EmailAddress},\n\t\tPhone = {AzureCustomer@Phone},\n\t\tPasswordHash = {AzureCustomer@PasswordHash},\n\t\tPasswordSalt = {AzureCustomer@PasswordSalt},\n\t\trowguid = {AzureCustomer@rowguid},\n\t\tModifiedDate = {AzureCustomer@ModifiedDate},\n\t\tInsertedDate,\n\t\tUpdatedDate,\n\t\tHashKey = {CreateHash@HashKey}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink"
		}
	}
}